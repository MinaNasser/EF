// <auto-generated />
using System;
using E_Commerc.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerc.Migrations
{
    [DbContext(typeof(ECommercContext))]
    [Migration("20250311184300_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerc.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            Name = "John Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            Name = "Jane Doe",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice@example.com",
                            Name = "Alice Brown",
                            PhoneNumber = "555123456"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob@example.com",
                            Name = "Bob Smith",
                            PhoneNumber = "666987654"
                        },
                        new
                        {
                            Id = 5,
                            Email = "charlie@example.com",
                            Name = "Charlie Johnson",
                            PhoneNumber = "777654321"
                        },
                        new
                        {
                            Id = 6,
                            Email = "david@example.com",
                            Name = "David Wilson",
                            PhoneNumber = "888123987"
                        },
                        new
                        {
                            Id = 7,
                            Email = "eve@example.com",
                            Name = "Eve Taylor",
                            PhoneNumber = "999654789"
                        },
                        new
                        {
                            Id = 8,
                            Email = "frank@example.com",
                            Name = "Frank White",
                            PhoneNumber = "111222333"
                        },
                        new
                        {
                            Id = 9,
                            Email = "grace@example.com",
                            Name = "Grace Hall",
                            PhoneNumber = "444555666"
                        },
                        new
                        {
                            Id = 10,
                            Email = "hank@example.com",
                            Name = "Hank Adams",
                            PhoneNumber = "777888999"
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 1500m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 800m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 600m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 1200m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 500m
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 1,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 2,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 1,
                            UnitPrice = 200m
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 3,
                            ProductId = 5,
                            Quantity = 2,
                            UnitPrice = 50m
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsPaid = true,
                            OrderId = 1,
                            PaymentMethod = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            IsPaid = true,
                            OrderId = 2,
                            PaymentMethod = "PayPal"
                        },
                        new
                        {
                            Id = 3,
                            IsPaid = false,
                            OrderId = 3,
                            PaymentMethod = "Bank Transfer"
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Laptop",
                            Price = 1000m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            Name = "Phone",
                            Price = 500m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tablet",
                            Price = 300m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 4,
                            Name = "Monitor",
                            Price = 200m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 5,
                            Name = "Keyboard",
                            Price = 50m,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mouse",
                            Price = 30m,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 7,
                            Name = "Headphones",
                            Price = 80m,
                            StockQuantity = 120
                        },
                        new
                        {
                            Id = 8,
                            Name = "Smart Watch",
                            Price = 150m,
                            StockQuantity = 90
                        },
                        new
                        {
                            Id = 9,
                            Name = "Speaker",
                            Price = 60m,
                            StockQuantity = 110
                        },
                        new
                        {
                            Id = 10,
                            Name = "USB Drive",
                            Price = 20m,
                            StockQuantity = 300
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Shippings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, NY",
                            OrderId = 1,
                            ShippedDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St, LA",
                            OrderId = 2,
                            ShippedDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St, TX",
                            OrderId = 3,
                            ShippedDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("E_Commerc.Migrations.StockHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChanged")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("StockHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChangeDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            QuantityChanged = -1
                        },
                        new
                        {
                            Id = 2,
                            ChangeDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            QuantityChanged = -1
                        },
                        new
                        {
                            Id = 3,
                            ChangeDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            QuantityChanged = -2
                        },
                        new
                        {
                            Id = 4,
                            ChangeDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            QuantityChanged = -1
                        },
                        new
                        {
                            Id = 5,
                            ChangeDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            QuantityChanged = -2
                        });
                });

            modelBuilder.Entity("E_Commerc.Entites.Order", b =>
                {
                    b.HasOne("E_Commerc.Entites.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerc.Entites.OrderDetail", b =>
                {
                    b.HasOne("E_Commerc.Entites.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerc.Entites.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerc.Entites.Payment", b =>
                {
                    b.HasOne("E_Commerc.Entites.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("E_Commerc.Entites.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("E_Commerc.Entites.Shipping", b =>
                {
                    b.HasOne("E_Commerc.Entites.Order", "Order")
                        .WithOne("Shipping")
                        .HasForeignKey("E_Commerc.Entites.Shipping", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("E_Commerc.Migrations.StockHistory", b =>
                {
                    b.HasOne("E_Commerc.Entites.Product", "Product")
                        .WithMany("StockHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerc.Entites.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("E_Commerc.Entites.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("Shipping")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerc.Entites.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("StockHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
